<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quick.shelf.modular.business.mapper.BOrderDetailsMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.quick.shelf.modular.business.entity.BOrderDetails">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="dept_id" property="deptId"/>
        <result column="product_code" property="productCode"/>
        <result column="order_number" property="orderNumber"/>
        <result column="mode_of_repayment" property="modeOfRepayment"/>
        <result column="amount" property="amount"/>
        <result column="debt_duration" property="debtDuration"/>
        <result column="accrual" property="accrual"/>
        <result column="service_charge" property="serviceCharge"/>
        <result column="annual_interest_rate" property="annualInterestRate"/>
        <result column="actual_amount" property="actualAmount"/>
        <result column="every_day_refund" property="everyDayRefund"/>
        <result column="count_refund" property="countRefund"/>
        <result column="status" property="status"/>
        <result column="overdue_number" property="overdueNumber"/>
        <result column="payment_term" property="paymentTerm"/>
        <result column="create_time" property="createTime"/>
        <result column="check_user_id" property="checkUserId"/>
        <result column="check_message" property="checkMessage"/>
        <result column="check_time" property="checkTime"/>
        <result column="draw_user_id" property="drawUserId"/>
        <result column="draw_message" property="drawMessage"/>
        <result column="draw_time" property="drawTime"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id AS "id",
        user_id AS "userId",
        dept_id AS "deptId",
        product_code AS "productCode",
        order_number AS "orderNumber",
        mode_of_repayment AS modeOfRepayment,
        amount AS amount,
        debt_duration AS debtDuration,
        accrual AS accrual,
        service_charge AS serviceCharge,
        annual_interest_rate AS annualInterestRate,
        actual_amount AS actualAmount,
        every_day_refund AS everyDayRefund,
        count_refund AS countRefund,
        status AS "status",
        overdue_number AS "overdueNumber",
        payment_term AS "paymentTerm",
        create_time AS "createTime",
        check_user_id AS "checkUserId",
        check_message AS "checkMessage",
        check_time AS "checkTime",
        draw_user_id AS "drawUserId",
        draw_message AS "drawMessage",
        draw_time AS "checkUserId"
    </sql>

    <select id="ifExistOrderByUserId" resultType="com.quick.shelf.modular.business.entity.BOrderDetails">
        select
        <include refid="Base_Column_List"/>
        from b_order_details where user_id = #{userId}
        AND status IN (0,1,2,3,5)
        limit 0,1
    </select>

    <select id="selectToAuditList" resultType="map">
        SELECT
        bod.id AS "id",
        bod.user_id AS "userId",
        bod.dept_id AS "deptId",
        bod.product_code AS "productCode",
        bod.order_number AS "orderNumber",
        bod.mode_of_repayment AS modeOfRepayment,
        bod.amount AS amount,
        bod.debt_duration AS debtDuration,
        bod.accrual AS accrual,
        bod.service_charge AS serviceCharge,
        bod.annual_interest_rate AS annualInterestRate,
        bod.actual_amount AS actualAmount,
        bod.every_day_refund AS everyDayRefund,
        bod.count_refund AS countRefund,
        bod.status AS "status",
        bod.overdue_number AS "overdueNumber",
        bod.payment_term AS "paymentTerm",
        bod.create_time AS "createTime",
        bod.check_message AS "checkMessage",
        bod.check_time AS "checkTime",
        bod.draw_message AS "drawMessage",
        bod.draw_time AS "checkUserId",
        bsu.name AS "name"
        FROM B_ORDER_DETAILS bod
        LEFT JOIN B_SYS_USER bsu ON
        bod.user_id = bsu.user_id
        WHERE bod.STATUS = #{status}
        <!-- 不查询被拉黑用户的订单信息 -->
        AND bod.`user_id` NOT IN (
        SELECT bbl.user_id FROM B_BLACK_LIST bbl
        )
        <if test="overdue != null and overdue != ''">
            AND bod.overdue_number != 0
        </if>
        <if test="name != null and name != ''">
            AND (bsu.name LIKE CONCAT('%',#{name},'%'))
        </if>
        <if test="deptId != null and deptId != 0">
            AND (bod.dept_id = #{deptId} )
        </if>
        <if test="beginTime != null and beginTime != '' and endTime != null and endTime != ''">
            AND (bod.create_time BETWEEN CONCAT(#{beginTime},' 00:00:00') AND CONCAT(#{endTime},' 23:59:59'))
        </if>
        ORDER BY bod.create_time DESC
    </select>

    <select id="selectBOrderDetailsByUserId" resultType="com.quick.shelf.modular.business.entity.BOrderDetails">
        SELECT
        <include refid="Base_Column_List"/>
        FROM B_ORDER_DETAILS
        WHERE USER_ID = #{userId}
        ORDER BY CREATE_TIME DESC
        LIMIT 0,1
    </select>
</mapper>